{
  "comments": [
    {
      "key": {
        "uuid": "46cee0e4_44a4cdd6",
        "filename": "net/test/tun_twister.py",
        "patchSetId": 14
      },
      "lineNbr": 49,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-09-25T15:25:33Z",
      "side": 1,
      "message": "Above you say that \"configuring routing is beyond the scope of this class\". Would such code need to be in any of the methods listed below? If so, would suggest adding an\n\n    # ... configure routing here\n\ncomment in the appropriate place.",
      "range": {
        "startLine": 49,
        "startChar": 2,
        "endLine": 49,
        "endChar": 9
      },
      "revId": "25180d9aa47ba386b691b735e87c71dc6bb18ff1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26b19f63_905603d1",
        "filename": "net/test/tun_twister.py",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-09-25T15:25:33Z",
      "side": 1,
      "message": "Explain whether these are seconds or milliseconds. I think select.poll() takes ms, but select.epoll() takes s, etc.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 69,
        "endChar": 26
      },
      "revId": "25180d9aa47ba386b691b735e87c71dc6bb18ff1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7aa9e8d_0da224a9",
        "filename": "net/test/tun_twister.py",
        "patchSetId": 14
      },
      "lineNbr": 79,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-09-25T15:25:33Z",
      "side": 1,
      "message": "Which is the packet being validated, I assume?",
      "range": {
        "startLine": 79,
        "startChar": 58,
        "endLine": 79,
        "endChar": 59
      },
      "revId": "25180d9aa47ba386b691b735e87c71dc6bb18ff1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6c4933b_f10447d9",
        "filename": "net/test/tun_twister.py",
        "patchSetId": 14
      },
      "lineNbr": 98,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-09-25T15:25:33Z",
      "side": 1,
      "message": "Out of curiosity, how can this happen given the join call above?",
      "range": {
        "startLine": 98,
        "startChar": 6,
        "endLine": 98,
        "endChar": 58
      },
      "revId": "25180d9aa47ba386b691b735e87c71dc6bb18ff1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bebfe95a_adc2c545",
        "filename": "net/test/tun_twister.py",
        "patchSetId": 14
      },
      "lineNbr": 122,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-09-25T15:25:33Z",
      "side": 1,
      "message": "Any reason why we can\u0027t just require self._fd to be non-blocking? When using select and poll it\u0027s typically more reliable to make everything non-blocking, because in many cases it can happen that even though select() or poll() say that you can read or write, the kernel actually ends up returning EAGAIN.",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 122,
        "endChar": 27
      },
      "revId": "25180d9aa47ba386b691b735e87c71dc6bb18ff1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}