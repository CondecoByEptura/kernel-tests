{
  "comments": [
    {
      "key": {
        "uuid": "328dee1d_cf1842a5",
        "filename": "net/test/sock_diag.py",
        "patchSetId": 7
      },
      "lineNbr": 115,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Can you explain why you moved these constants and added constructors?",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 115,
        "endChar": 61
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49ac6efa_c6d896fb",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-06-29T02:09:26Z",
      "side": 1,
      "message": "We shouldn\u0027t have any pragmas for proprietary \"g-*\" lint warnings. The open source name for this is just \"fixme\" but you shouldn\u0027t disable it in a pragma - that belongs in pylintrc or $HOME/.pylintrc.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 28
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2760a8c_45029acc",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Do you really need all of these?\n\nAlso, many of these are already defined in iproute.py. Can you add the missing ones there instead?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 49,
        "endChar": 14
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca9b1ea0_32a562d6",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Don\u0027t define this, it changes between kernel versions.",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 25
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c442784_a79fd970",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 15
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aae877d9_7e4c9699",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "This is already defined in iproute.py, can you use that instead?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 9
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba9d599d_a22f27ee",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-06-29T02:09:26Z",
      "side": 1,
      "message": "I know this is copied from ifinfomsg, but my impression is that in the kernel it is a one-byte pad that is never written or read. If that is the case, feel free to replace \"BBHiII\" with \"BxHiII\" and remove this field name.",
      "range": {
        "startLine": 76,
        "startChar": 16,
        "endLine": 76,
        "endChar": 25
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31271015_95ed3ad5",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-06-29T02:09:26Z",
      "side": 1,
      "message": "may be worth adding a sentence to clarify this. I think it would be enough to say something like, \"Provides a subset of rtnetlink functionality used to manage VTI.\"",
      "range": {
        "startLine": 80,
        "startChar": 16,
        "endLine": 80,
        "endChar": 27
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24c4c208_82f20155",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Please add IPv6 support as well.",
      "range": {
        "startLine": 120,
        "startChar": 51,
        "endLine": 120,
        "endChar": 65
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34f248bf_64f9aeea",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 135,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Since AF_UNSPEC is 0, you could just leave this zero-initialized.",
      "range": {
        "startLine": 135,
        "startChar": 23,
        "endLine": 135,
        "endChar": 50
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "592e50b2_7998dcde",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 141,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 141,
        "startChar": 23,
        "endLine": 141,
        "endChar": 50
      },
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "158e044c_4c4b9dd7",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 147,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-06-29T02:09:26Z",
      "side": 1,
      "message": "Raise a ValueError or TypeError instead of returning an invalid value.",
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be7b6dbf_c0e99535",
        "filename": "net/test/tunnel.py",
        "patchSetId": 7
      },
      "lineNbr": 147,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-06-29T16:22:31Z",
      "side": 1,
      "message": "Suggest being be consistent with other parts of the code and just doing something like:\n\n  self._SendNlRequest(...)\n  return self._GetMsg(IfInfoMsg).ifindex\n\nRationale: there\u0027s little point in checking for an error here. The check will never do anything unless there\u0027s a pretty blatant kernel bug, and since this code is only used in tests, such a blatant bug will likely just cause the test to fail.",
      "parentUuid": "158e044c_4c4b9dd7",
      "revId": "5e90536257aaddaad7f97ddf92c225c1eb13bba9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}