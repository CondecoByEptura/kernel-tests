{
  "comments": [
    {
      "key": {
        "uuid": "7fe02786_bc113182",
        "filename": "net/test/xfrm.py",
        "patchSetId": 34
      },
      "lineNbr": 672,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-24T15:03:48Z",
      "side": 1,
      "message": "Consider making these constants. TUNNEL_MATCH_MARK, TUNNEL_MATCH_ALL, etc.\n\nThat said: it looks like we don\u0027t really need these? This parameter seems entirely redundant, since all they do is affect tmpl_spi and if_id, and the caller can already pass in values for those.\n\nIf we want to limit the caller\u0027s ability to pass in nonsensical combinations, then we can do that by throwing exceptions.",
      "range": {
        "startLine": 672,
        "startChar": 23,
        "endLine": 672,
        "endChar": 29
      },
      "revId": "1be6fbc87da8ac7da701392ece8353fbc85bb09e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfe44204_16a07bc7",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 34
      },
      "lineNbr": 478,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-24T15:03:48Z",
      "side": 1,
      "message": "This probably duplicates the code in xfrm.CreateTunnel, which is not great since that code is in a different file. Should that method be split into two, one part that creates the SA and one part that creates the policies?",
      "range": {
        "startLine": 452,
        "startChar": 0,
        "endLine": 478,
        "endChar": 35
      },
      "revId": "1be6fbc87da8ac7da701392ece8353fbc85bb09e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3613fdd1_c01ef8e5",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 34
      },
      "lineNbr": 486,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-24T15:03:48Z",
      "side": 1,
      "message": "Hmm. Does this duplicate the rest of CreateTunnel?",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 486,
        "endChar": 69
      },
      "revId": "1be6fbc87da8ac7da701392ece8353fbc85bb09e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1707fc7f_649e42a3",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 34
      },
      "lineNbr": 644,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-24T15:03:48Z",
      "side": 1,
      "message": "Instead of doing this, why not catch the AssertionError in the caller?",
      "range": {
        "startLine": 643,
        "startChar": 0,
        "endLine": 644,
        "endChar": 58
      },
      "revId": "1be6fbc87da8ac7da701392ece8353fbc85bb09e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6df360b_1c57ccbb",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 34
      },
      "lineNbr": 788,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-24T15:03:48Z",
      "side": 1,
      "message": "Can you provide a bit more detail why those tests require this?",
      "range": {
        "startLine": 788,
        "startChar": 8,
        "endLine": 788,
        "endChar": 38
      },
      "revId": "1be6fbc87da8ac7da701392ece8353fbc85bb09e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}