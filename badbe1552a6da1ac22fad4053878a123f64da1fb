{
  "comments": [
    {
      "key": {
        "uuid": "b7216881_5c246e6a",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 39,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Nit: this is never used for the netId. Rename back to _TEST_XFRM_IF_ID?",
      "range": {
        "startLine": 39,
        "startChar": 11,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86a4903f_fd011cd5",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 39,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7216881_5c246e6a",
      "range": {
        "startLine": 39,
        "startChar": 11,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c209dd0c_858ea92b",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Nit: the actual on-device code reserves high numbers for tunnel interface netId, right? If so, we might want to do the same here for extra realism. In these tests, \"physical\" netIds are limited to be \u003c\u003d 254 because of the way their IPv4 addresses are generated, but hopefully that doesn\u0027t apply to these netIds.",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87fa0414_a94cf353",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done. I\u0027ve offset the netids by the start of the reserved range (0xFC00). I\u0027ve also had to subtract that when attempting IP addresses are assigned, but it works with those changes.",
      "parentUuid": "c209dd0c_858ea92b",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4517def1_ef4c5072",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 326,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "If you rename auth_algo to auth and crypt_algo to crypt will this fit on fewer lines?",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 326,
        "endChar": 61
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "134df2a9_596d33b2",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 326,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4517def1_ef4c5072",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 326,
        "endChar": 61
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "245e34ae_4e891a3c",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 373,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "xfrm interfaces don\u0027t have a version. Maybe explain here that we only use XFRM interfaces one-to-one with tunnel interfaces, for which the version is the IP version of the tunnel IP addresses?",
      "range": {
        "startLine": 373,
        "startChar": 9,
        "endLine": 373,
        "endChar": 16
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f0a4d00_3cf0a46c",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 373,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "245e34ae_4e891a3c",
      "range": {
        "startLine": 373,
        "startChar": 9,
        "endLine": 373,
        "endChar": 16
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "725da52a_d00fd007",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 406,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Most of this code seems to be identical to the VTI code. Maybe refactor out to a common IpSecInterface or BaseIpSecInterface superclass?",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 406,
        "endChar": 61
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6217dda7_c0384648",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 406,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "725da52a_d00fd007",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 406,
        "endChar": 61
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3c3877b_ddc52926",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 434,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Explain that we group tunnels by version because we want to ensure we always test at least one IPv4 and one IPv6 tunnel?",
      "range": {
        "startLine": 432,
        "startChar": 0,
        "endLine": 434,
        "endChar": 22
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f84f741_8cfc41f8",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 434,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3c3877b_ddc52926",
      "range": {
        "startLine": 432,
        "startChar": 0,
        "endLine": 434,
        "endChar": 22
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0347da12_4fa71547",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 441,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Use ( instead of \\ for multi-line statements because it continues to be correct when you re-flow. Also, I think this could be more readable:\n\n  if version \u003d\u003d 4:\n    addrs \u003d (net_test.IPV4_ADDR, net_test.IPV4_ADDR2)\n  else:\n    addrs \u003d (net_test.IPV6_ADDR, net_test.IPV6_ADDR2)\n\n  remote, null_crypt_remote \u003d addrs if (i % 2) else tuple(reversed(addrs))",
      "range": {
        "startLine": 441,
        "startChar": 38,
        "endLine": 441,
        "endChar": 39
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a61039f7_9f2db383",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 441,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done. Turns out I was never using null_crypt_remote.",
      "parentUuid": "0347da12_4fa71547",
      "range": {
        "startLine": 441,
        "startChar": 38,
        "endLine": 441,
        "endChar": 39
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b0fa602_2c6d76cd",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 471,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Is this __class__. necessary? I thought class members automatically became instance members, so just plain \"self.\" should work.",
      "range": {
        "startLine": 471,
        "startChar": 24,
        "endLine": 471,
        "endChar": 34
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "034da5d8_d8052990",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 471,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b0fa602_2c6d76cd",
      "range": {
        "startLine": 471,
        "startChar": 24,
        "endLine": 471,
        "endChar": 34
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a000661_a0fadd49",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 549,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Out of curiosity, is there a reason we pass this in instead of using tunnel.in_sa? Will it be necessary anyway in a future change?",
      "range": {
        "startLine": 549,
        "startChar": 41,
        "endLine": 549,
        "endChar": 48
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "241bbbc3_e0bd9faa",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 549,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Yeah; for the full rekey tests, we need to specify which set of SAs are to be used, and in some cases we want to test both the old and new ones. This could be hacked in based on the timings of when we change the tunnel\u0027s sa_info field, but that seems likely to cause potential test bugs.",
      "parentUuid": "6a000661_a0fadd49",
      "range": {
        "startLine": 549,
        "startChar": 41,
        "endLine": 549,
        "endChar": 48
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37081d96_ca917ff4",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 561,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "One-line docstring? Something like:\n\n    \"\"\"Test the input path using null auth/crypt.\"\"\"",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d54fbbe_8dcf71cf",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 561,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37081d96_ca917ff4",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b288b6e_6a552558",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 579,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Docstring?",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d01552b_4c29849e",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 579,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b288b6e_6a552558",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74725ce4_fd89c275",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 582,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Will this always be tunnel.out_sa even during rekey?",
      "range": {
        "startLine": 581,
        "startChar": 0,
        "endLine": 582,
        "endChar": 29
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc091d9b_cf92c3c1",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 582,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "During rekey, we specify the sa_info that is to be used. This just sets the default, which is out_sa unless rekeying. (I couldn\u0027t find a way to put this as a default, given that it is a field of another parameter.",
      "parentUuid": "74725ce4_fd89c275",
      "range": {
        "startLine": 581,
        "startChar": 0,
        "endLine": 582,
        "endChar": 29
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "758d468a_45d42ce0",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 593,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Now that we have a recent scapy, can we end this suffering by just doing something like:\n\n    ln -s .../external/scapy .\n\nor suchlike? At least for new code that we\u0027re writing now?",
      "range": {
        "startLine": 593,
        "startChar": 46,
        "endLine": 593,
        "endChar": 84
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0524c77b_cee64443",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 593,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "758d468a_45d42ce0",
      "range": {
        "startLine": 593,
        "startChar": 46,
        "endLine": 593,
        "endChar": 84
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e058b54_701ee8b2",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 593,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:39:47Z",
      "side": 1,
      "message": "Apparently Treehugger is extremely unhappy with this. It does not appear to clone the platform/external/scapy project, and thus cannot link properly. I\u0027ve reverted these changes, and pushed it as a new WIP CL, pending further investigation into getting external/scapy pulled in treehugger builds: aosp/714812\n\nThat new CL also should include removal of TunTwister and Null crypt.",
      "parentUuid": "0524c77b_cee64443",
      "range": {
        "startLine": 593,
        "startChar": 46,
        "endLine": 593,
        "endChar": 84
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d5c23c6_285b732d",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 619,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Docstring? Should at least explain how this is different from _CheckTunnelOutput above.",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e55e824a_5bcda411",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 619,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d5c23c6_285b732d",
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9f9242a_b4070ab8",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 659,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Docstring?",
      "range": {
        "startLine": 659,
        "startChar": 6,
        "endLine": 659,
        "endChar": 22
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df7c7430_40942e0f",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 659,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9f9242a_b4070ab8",
      "range": {
        "startLine": 659,
        "startChar": 6,
        "endLine": 659,
        "endChar": 22
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5a01a8b_d934beab",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 693,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "Should this say \"ipsec interface\"?",
      "range": {
        "startLine": 693,
        "startChar": 43,
        "endLine": 693,
        "endChar": 67
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46fe27c2_5bf32639",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 693,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5a01a8b_d934beab",
      "range": {
        "startLine": 693,
        "startChar": 43,
        "endLine": 693,
        "endChar": 67
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f5f5ee4_10cca667",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 697,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-06T03:06:36Z",
      "side": 1,
      "message": "If we tear down the XFRM state during tests like this, then we can\u0027t be confident that input, output and ICMP continue to work on the same tunnel with the same SA. Is there a reason we can\u0027t use a single set of SAs for the null tests and a single set of SAs for the non-null tests?",
      "range": {
        "startLine": 697,
        "startChar": 13,
        "endLine": 697,
        "endChar": 25
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7ab5c17_c4d432d8",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 697,
      "author": {
        "id": 1221725
      },
      "writtenOn": "2018-07-10T02:17:36Z",
      "side": 1,
      "message": "My intent behind this was to ensure that each tests maintains isolation, so that a single failure doesn\u0027t cascade and make it harder to debug. I\u0027ve added an additional test (ParamTestVtiEncryptedWithIcmp) to ensure that this works properly.",
      "parentUuid": "6f5f5ee4_10cca667",
      "range": {
        "startLine": 697,
        "startChar": 13,
        "endLine": 697,
        "endChar": 25
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1291f001_8584bcc4",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 22
      },
      "lineNbr": 697,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2018-07-24T14:46:50Z",
      "side": 1,
      "message": "That helps. I\u0027m still not a fan of the way we tear down XFRM and set it up again between testcases, but as long as we can test input, output, and ICMP in the same test method without ever calling TeardownXfrm (and we can, right?) that works for me.",
      "parentUuid": "f7ab5c17_c4d432d8",
      "range": {
        "startLine": 697,
        "startChar": 13,
        "endLine": 697,
        "endChar": 25
      },
      "revId": "badbe1552a6da1ac22fad4053878a123f64da1fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}