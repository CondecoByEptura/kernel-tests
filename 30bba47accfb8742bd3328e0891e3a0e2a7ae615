{
  "comments": [
    {
      "key": {
        "uuid": "060241b1_f02ca2b3",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-05-10T06:01:06Z",
      "side": 1,
      "message": "Having three boolean parameters might get confusing. Maybe add some helpers?\n\n    def AddIptablesUidRule(version, inverted):\n      self.SetIptablesRule(version, True, False, inverted)\n\n    def AddIptablesGidRule(version, inverted)\n      self.SetIptablesRule(version, True, True, inverted)\n\n    def DelIptablesUidRule(version, inverted):\n      self.SetIptablesRule(version, False, False, inverted)\n\n    def DelIptablesGidRule(version, inverted)\n      self.SetIptablesRule(version, False, True, inverted)\n\nor, you could just change the callers to use named parameters, like so (assuming it works):\n\n    self.SetIptablesRule(4, is_add\u003dTrue, is_gid\u003dFalse, inverted\u003dTrue)",
      "range": {
        "startLine": 41,
        "startChar": 37,
        "endLine": 41,
        "endChar": 69
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "112d521b_fa7f7245",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1121354
      },
      "writtenOn": "2017-05-10T17:06:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "060241b1_f02ca2b3",
      "range": {
        "startLine": 41,
        "startChar": 37,
        "endLine": 41,
        "endChar": 69
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d78fe0_586355f1",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-05-10T06:01:06Z",
      "side": 1,
      "message": "Suggest just using \"if inverted:\"",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 44,
        "endChar": 24
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b2da27d_4b368a6b",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1121354
      },
      "writtenOn": "2017-05-10T17:06:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24d78fe0_586355f1",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 44,
        "endChar": 24
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e73562c7_10a898c7",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-05-10T06:01:06Z",
      "side": 1,
      "message": "For consistency, maybe call this s2? Or call this sock2 and rename s above to sock?",
      "range": {
        "startLine": 79,
        "startChar": 6,
        "endLine": 79,
        "endChar": 10
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acfbf544_c0149bbf",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1121354
      },
      "writtenOn": "2017-05-10T17:06:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e73562c7_10a898c7",
      "range": {
        "startLine": 79,
        "startChar": 6,
        "endLine": 79,
        "endChar": 10
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6d85f06_cf4077a5",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-05-10T06:01:06Z",
      "side": 1,
      "message": "Why do you need this timeout?",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 20
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31778046_5a436d32",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1121354
      },
      "writtenOn": "2017-05-10T17:06:21Z",
      "side": 1,
      "message": "This is used to prevent recvFrom wait infinite time when debugging, will delete it",
      "parentUuid": "f6d85f06_cf4077a5",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 20
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4df1ecd6_0d714143",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-05-11T04:04:31Z",
      "side": 1,
      "message": "Can you use net_test.SetNonBlocking(s) instead?",
      "parentUuid": "31778046_5a436d32",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 20
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3fdd5c5_c6c3ac66",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-05-10T06:01:06Z",
      "side": 1,
      "message": "Is there a reason this test is different from the one above? Can you add a comment explaining why, or add some comments to both tests explaining what they do?",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 101,
        "endChar": 57
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb09b27a_18101d38",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1121354
      },
      "writtenOn": "2017-05-10T17:06:21Z",
      "side": 1,
      "message": "Sure, will add some comment on the test. The problem with gid test is even if I run the test with a different uid, the gid is still 0. So I used an alternative way to test the gid match",
      "parentUuid": "c3fdd5c5_c6c3ac66",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 101,
        "endChar": 57
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b017387_4916ff4d",
        "filename": "net/test/qtaguid_test.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2017-05-11T04:04:31Z",
      "side": 1,
      "message": "It seems like it would be better for these two tests to use the same testing methodology.\n\nIf the problem is that RunAsUid only changes the UID, it\u0027s simple to add a new RunAsGid or RunAsUidGid that changes the GID. (If you do this, please don\u0027t duplicate code; a good way to do it might be to have RunAsUid just call or subclass RunAsUidGid with a gid of -1)\n\n\nIf on the other hand this testing methodology is better, then should we use it in the UID tests as well?",
      "parentUuid": "fb09b27a_18101d38",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 101,
        "endChar": 57
      },
      "revId": "30bba47accfb8742bd3328e0891e3a0e2a7ae615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}