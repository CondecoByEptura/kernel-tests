{
  "comments": [
    {
      "key": {
        "uuid": "243f6b16_9a444f76",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "These are all stateful objects (they own netlink sockets). Let\u0027s move them to setUp.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 70,
        "endChar": 35
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d806b978_86731750",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "Why have req_id as a param if it is never used in call sites?",
      "range": {
        "startLine": 99,
        "startChar": 23,
        "endLine": 99,
        "endChar": 31
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73a855cb_2e8624e2",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "What does this comment mean? That we only create xfrm state for one direction?",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 100,
        "endChar": 21
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "450e2bfd_451a0ab9",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "the selector now has specific saddr and daddr, so should we still call it \"essentially no-op\"?",
      "range": {
        "startLine": 113,
        "startChar": 6,
        "endLine": 113,
        "endChar": 25
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3303e338_9d9f5a39",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "could you switch to the keyword constructor here? and for tmpl?",
      "range": {
        "startLine": 115,
        "startChar": 8,
        "endLine": 116,
        "endChar": 79
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "047414df_2de2aaad",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "How is this different from expectEspPacketOn? For two methods that seem so similar, they should at least appear next to each other in the class.",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 137,
        "endChar": 57
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90a57024_a440ef51",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "This is useful for debugging but needs to be removed before submitting. If this information is important in test failures, it should be part of the error output.",
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1762691f_020a7d17",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "We need to test both v4 and v6 for each test. It is fine to copy Lorenzo\u0027s pattern here:\nhttps://android-review.googlesource.com/c/kernel/tests/+/452776/2/net/test/xfrm_test.py#473",
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42c1d8eb_24480f77",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "I think you can do the same thing with packet.payload.build()",
      "range": {
        "startLine": 180,
        "startChar": 28,
        "endLine": 180,
        "endChar": 47
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1de0869_2b00ff37",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "Now that I read this, I realize that neither of the \"expect*PacketOn\" methods are being used. It is important that we carefully check the IP header of the packet, but this can still be part of a helper method.",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 181,
        "endChar": 70
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7bbbc0_3ed28659",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 200,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "prefer \"with self.assertRaises(IOError):\"",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 200,
        "endChar": 67
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4709ea68_0c938406",
        "filename": "net/test/xfrm_tunnel_test.py",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1070023
      },
      "writtenOn": "2017-09-20T22:34:02Z",
      "side": 1,
      "message": "This seems out of place here. What\u0027s going on?",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 261,
        "endChar": 47
      },
      "revId": "72750798fa8e981d36bd3b6c89a66f5dea1dc243",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}